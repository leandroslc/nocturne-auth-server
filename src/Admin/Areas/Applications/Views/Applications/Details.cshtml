@using static OpenIddict.Abstractions.OpenIddictConstants;
@model ViewApplicationResult
@inject IViewLocalizer localizer

@{
    var title = localizer["Application details"];

    ViewData[KnownViewData.Title] = title;
    ViewData[KnownViewData.PageGroup] = PageGroups.Applications;
}

<div class="container px-4 py-4">
    <vc:back title="Applications" url="@Url.RouteUrl(RouteNames.ApplicationsHome)" />

    <div class="d-flex align-items-center mb-3">
        <h1 class="h2">@title</h1>
        <div class="ms-auto">
            <a asp-route="@RouteNames.ApplicationsEdit" asp-route-id="@Model.Id" class="btn btn-success">
                <span class="bi-pencil" aria-hidden="true"></span>
                <span>@localizer["Edit"]</span>
            </a>
        </div>
    </div>

    <div class="row mb-3">
        <label class="form-label col-form-label col-md-12">@localizer["Name"]</label>
        <div class="col">
            <span class="form-control" readonly>@Model.DisplayName</span>
        </div>
    </div>

    <div class="row mb-3">
        <label class="form-label col-form-label col-md-12">@localizer["Client Id"]</label>
        <div class="col input-group align-items-center">
            <input class="form-control" asp-for="@Model.ClientId" readonly />
            <button class="btn btn-primary" type="button" id="CopyClientId" title="@localizer["Copy"]">
                <span class="bi bi-clipboard" aria-hidden="true"></span>
            </button>
        </div>
    </div>

    @if (Model.Type == ClientTypes.Confidential)
    {
        <div class="row mb-3">
            <label class="form-label col-form-label col-md-12">@localizer["Client Secret"]</label>
            <div class="col input-group align-items-center">
                <input class="form-control" asp-for="@Model.ClientSecret" value="@Model.ClientSecret" type="password" readonly />
                <button class="btn btn-primary" type="button" id="ToggleClientSecret" title="@localizer["Toggle client secret visibility"]">
                    <span class="bi bi-eye" aria-hidden="true" is-password="true"></span>
                    <span class="bi bi-eye-slash" aria-hidden="true" is-password="false" style="display: none;"></span>
                </button>
                <button class="btn btn-primary border-start" type="button" id="CopyClientSecret" title="@localizer["Copy"]">
                    <span class="bi bi-clipboard" aria-hidden="true"></span>
                </button>
            </div>
        </div>
    }

    <div class="row mb-3">
        <label class="form-label col-form-label col-md-12">@localizer["Type"]</label>
        <div class="col">
            @{
                var type = Model.Type switch
                {
                    ClientTypes.Confidential => localizer["Confidential"],
                    ClientTypes.Public => localizer["Public"],
                    _ => null,
                };
            }
            <span class="form-control" readonly>@type</span>
        </div>
    </div>

    <div class="row mb-3">
        <label class="form-label col-form-label col-md-12">@localizer["Allowed Scopes"]</label>
        <div class="col">
            <div class="d-flex align-items-center">
                @if (Model.AllowedScopes.Count > 0)
                {
                    @foreach (var scope in Model.AllowedScopes)
                    {
                        <span class="badge bg-light border border-primary text-primary fs-6 fw-normal p-2 me-1 mb-1">@scope</span>
                    }
                }
                else
                {
                    <span class="text-muted">@localizer["None"]</span>
                }
            </div>
        </div>
    </div>

    <hr class="text-muted" />

    <h3 class="h4 my-3">@localizer["Allowed Flows"]</h3>

    <ul class="form-label">
        @if (Model.AllowAuthorizationCodeFlow)
        {
            <li>@localizer["Authorization Code Flow"] @localizer["with PKCE"]</li>
        }

        @if (Model.AllowImplicitFlow)
        {
            <li>@localizer["Implicit Flow"]</li>
        }

        @if (@Model.AllowPasswordFlow)
        {
            <li>@localizer["Resource Owner Password Flow"]</li>
        }

        @if (@Model.AllowClientCredentialsFlow)
        {
            <li>@localizer["Client Credentials Flow"]</li>
        }

        @if (@Model.AllowRefreshTokenFlow)
        {
            <li>@localizer["Refresh Token Flow"]</li>
        }
    </ul>

    <hr class="text-muted" />

    <h3 class="h4 my-3">@localizer["Configurations"]</h3>

    <div class="row mb-3">
        <label class="form-label col-form-label col-md-12">@localizer["Redirect Uris"]</label>
        <div class="col">
            <div class="d-flex align-items-center">
                @if (Model.RedirectUris.Count > 0)
                {
                    @foreach (var uri in Model.RedirectUris)
                    {
                        <span class="badge bg-light border border-primary text-primary fs-6 fw-normal p-2 me-1 mb-1">@uri</span>
                    }
                }
                else
                {
                    <span class="text-muted">@localizer["None"]</span>
                }
            </div>
        </div>
    </div>

    <div class="row mb-3">
        <label class="form-label col-form-label col-md-12">@localizer["Logout Redirect Uris"]</label>
        <div class="col">
            <div class="d-flex align-items-center">
                @if (Model.PostLogoutRedirectUris.Count > 0)
                {
                    @foreach (var uri in Model.PostLogoutRedirectUris)
                    {
                        <span class="badge bg-light border border-primary text-primary fs-6 fw-normal p-2 me-1 mb-1">@uri</span>
                    }
                }
                else
                {
                    <span class="text-muted">@localizer["None"]</span>
                }
            </div>
        </div>
    </div>

    <div class="row mb-3">
        <label class="form-label col-form-label col-md-12">@localizer["Consent type"]</label>
        <div class="col">
            @{
                var consentType = Model.ConsentType switch
                {
                    ConsentTypes.Explicit => localizer["Explicit"],
                    ConsentTypes.Implicit => localizer["Implicit"],
                    ConsentTypes.External => localizer["External"],
                    _ => null,
                };
            }
            <span class="form-control" readonly>@consentType</span>
        </div>
    </div>
</div>

@section scripts
{
    <script src="~/js/applications.js" asp-append-version="true"></script>
    <script>
        viewApplication({
            ids: {
                clientId: '@nameof(Model.ClientId)',
                clientSecret: '@nameof(Model.ClientSecret)',
                copyClientId: 'CopyClientId',
                copyClientSecret: 'CopyClientSecret',
                toggleClientSecret: 'ToggleClientSecret'
            },
        });
    </script>
}
